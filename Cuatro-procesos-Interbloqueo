// Representacion de Interbloqueo cuando 4 procesos necesitan un mismo recurso
let x,y,x1, y1, x2, y2,x3,y3,x4,y4;
let circulo1;
let circulo2;
let circulo3;
let circulo4;
let circulo1fase1;
let circulo2fase1;
function setup() {
  createCanvas(720, 400);
  x = 360;
  y = 200;
  circulo1 = new Jitter();
  circulo2 = new Jitter();
  circulo3 = new Jitter();
  circulo4 = new Jitter();
  circulo1fase1 = new Jitter();
  circulo2fase1 = new Jitter();
}
function draw() {
  background(200);
  fill('green');
  ellipse(200, 215, 24, 24);
  fill('green');
  ellipse(520, 185, 24, 24);
  fill('green');
  ellipse(345, 50, 24, 24);
  fill('green');
  ellipse(375, 350, 24, 24);
  fill('red');
  ellipse(200, 185, 24, 24);
  fill('red');
  ellipse(520, 215, 24, 24);
  fill('red');
  ellipse(375, 50, 24, 24);
  fill('red');
  ellipse(345, 350, 24, 24);
  fill('grey');
  ellipse(x, y, 80, 80);
  fill('cyan');
  rect(340, 50, 10, 300);
  rect(370, 50, 10, 300);
  rect(200, 180, 320, 10);
  rect(200, 210, 320, 10);
  circulo1.mover1();
  circulo2.mover2();
  circulo3.mover3();
  circulo4.mover4();
}


class Jitter {
  constructor() {
    x1 = 210;
    y1 = 215;
    x2 = 345;
    y2 = 50;
    x3 = 510;
    y3 = 185;
    x4 = 375;
    y4 = 350;
  }
  mover1(){
  stroke(50);
  fill(100);
  ellipse(x1, y1, 24, 24);
  x1 = x1 + 1;
  if (x1 > 310) {
    x1 = 310;
    
  }
}
  mover2(){
  stroke(50);
  fill(100);
  ellipse(x2, y2, 24, 24);
  y2 = y2 + 1;
  if (y2 > 150) {
    y2 = 150;
  }
}
  mover4(){
  stroke(50);
  fill(100);
  ellipse(x4, y4, 24, 24);
  y4 = y4 - 1;
  if (y4 < 250) {
    y4 = 250;
  }
}
  mover3(){
  stroke(50);
  fill(100);
  ellipse(x3, y3, 24, 24);
  x3 = x3 - 1;
  if (x3 < 410) {
    x3 = 410;
  }
}
}
